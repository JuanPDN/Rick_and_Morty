{"ast":null,"code":"const validateEmail = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\nconst validatePass = /^(?=.*\\d).{6,10}$/;\nconst errorsMail = {\n  invalidate: 'Ingresa un email valido',\n  tooLong: 'el email no puede tener más de 35 caracteres',\n  empty: 'el email no puede estar vacío.'\n};\nconst errorsPass = {\n  invalidate: 'la contraseña tiene que tener al menos un número.',\n  badLong: 'la contraseña tiene que tener una longitud entre 6 y 10 caracteres'\n};\nexport default function Validate(_ref) {\n  let {\n    email,\n    password\n  } = _ref;\n  const error = {};\n  if (email.length > 35) {\n    error.long = errorsMail.tooLong;\n  }\n  if (email.length === 0) {\n    error.empty = errorsMail.empty;\n  }\n  if (validateEmail.test(email) === false) {\n    error.email = errorsMail.invalidate;\n  }\n  if (password.length < 6 || password.length > 10) {\n    error.badLong = errorsPass.badLong;\n  }\n  if (!validatePass.test(password)) {\n    error.pass = errorsPass.invalidate;\n  }\n  return error;\n}\n_c = Validate;\nvar _c;\n$RefreshReg$(_c, \"Validate\");","map":{"version":3,"names":["validateEmail","validatePass","errorsMail","invalidate","tooLong","empty","errorsPass","badLong","Validate","_ref","email","password","error","length","long","test","pass","_c","$RefreshReg$"],"sources":["/Users/juandelgadonivia/Documents/rick_and_morty/Client/src/components/Form/validation.js"],"sourcesContent":["const validateEmail = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\nconst validatePass = /^(?=.*\\d).{6,10}$/\n\nconst errorsMail = {\n    invalidate: 'Ingresa un email valido',\n    tooLong: 'el email no puede tener más de 35 caracteres',\n    empty: 'el email no puede estar vacío.'\n}\n\nconst errorsPass = {\n    invalidate: 'la contraseña tiene que tener al menos un número.',\n    badLong: 'la contraseña tiene que tener una longitud entre 6 y 10 caracteres'\n}\n\nexport default function Validate({ email, password }) {\n    const error = {}\n    if (email.length > 35) {\n        error.long = errorsMail.tooLong\n    }\n    if (email.length === 0) {\n        error.empty = errorsMail.empty\n    }\n    if (validateEmail.test(email) === false) {\n        error.email = errorsMail.invalidate\n    }\n    if (password.length < 6 || password.length > 10) {\n        error.badLong = errorsPass.badLong\n    }\n    if (!validatePass.test(password)) {\n        error.pass = errorsPass.invalidate\n    }\n    return error\n}\n\n\n\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG,kDAAkD;AACxE,MAAMC,YAAY,GAAG,mBAAmB;AAExC,MAAMC,UAAU,GAAG;EACfC,UAAU,EAAE,yBAAyB;EACrCC,OAAO,EAAE,8CAA8C;EACvDC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,UAAU,GAAG;EACfH,UAAU,EAAE,mDAAmD;EAC/DI,OAAO,EAAE;AACb,CAAC;AAED,eAAe,SAASC,QAAQA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAChD,MAAMG,KAAK,GAAG,CAAC,CAAC;EAChB,IAAIF,KAAK,CAACG,MAAM,GAAG,EAAE,EAAE;IACnBD,KAAK,CAACE,IAAI,GAAGZ,UAAU,CAACE,OAAO;EACnC;EACA,IAAIM,KAAK,CAACG,MAAM,KAAK,CAAC,EAAE;IACpBD,KAAK,CAACP,KAAK,GAAGH,UAAU,CAACG,KAAK;EAClC;EACA,IAAIL,aAAa,CAACe,IAAI,CAACL,KAAK,CAAC,KAAK,KAAK,EAAE;IACrCE,KAAK,CAACF,KAAK,GAAGR,UAAU,CAACC,UAAU;EACvC;EACA,IAAIQ,QAAQ,CAACE,MAAM,GAAG,CAAC,IAAIF,QAAQ,CAACE,MAAM,GAAG,EAAE,EAAE;IAC7CD,KAAK,CAACL,OAAO,GAAGD,UAAU,CAACC,OAAO;EACtC;EACA,IAAI,CAACN,YAAY,CAACc,IAAI,CAACJ,QAAQ,CAAC,EAAE;IAC9BC,KAAK,CAACI,IAAI,GAAGV,UAAU,CAACH,UAAU;EACtC;EACA,OAAOS,KAAK;AAChB;AAACK,EAAA,GAlBuBT,QAAQ;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}